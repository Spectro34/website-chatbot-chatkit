services:
  # ChatBot Backend with Containerized Ollama Support
  chatbot-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: chatbot-backend-ollama
    command: ["node", "server-ollama.js"]
    environment:
      - OLLAMA_BASE_URL=http://ollama-server:11434
      - OLLAMA_MODEL=llama2:latest
      - OLLAMA_API_KEY=ollama
      - PORT=3001
      - NODE_ENV=production
      - ALLOWED_ORIGINS=http://localhost:8080,http://localhost:3000
      - RATE_LIMIT_REQUESTS_PER_MINUTE=60
      - RATE_LIMIT_REQUESTS_PER_HOUR=1000
      - RATE_LIMIT_BURST=10
      - SESSION_SECRET=your-super-secret-session-key-change-this-in-production
      - API_KEY_HASH_SALT=your-salt-for-api-key-hashing-change-this-in-production
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
    ports:
      - "3001:3001"
    networks:
      - chatbot-network
    # No depends_on - connects to external Ollama container
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # Sample Website
  sample-website:
    build:
      context: ./sample-website
      dockerfile: Dockerfile
    container_name: sample-website-ollama
    volumes:
      - ./chatkit-widget.js:/usr/share/nginx/html/chatkit-widget.js
    ports:
      - "8080:80"
    networks:
      - chatbot-network
    depends_on:
      chatbot-backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

networks:
  chatbot-network:
    external: true
