# ChatKit Helm Chart Values
# This file contains the default values for the ChatKit deployment

# Global configuration
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""

# ChatKit Backend Configuration
backend:
  enabled: true
  replicaCount: 2
  
  image:
    repository: websitechatbot/chatkit-backend
    tag: "latest"
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 3001
    targetPort: 3001
  
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
  
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  
  # Environment variables
  env:
    NODE_ENV: "production"
    PORT: 3001
    ALLOWED_ORIGINS: ""
    MAX_REQUESTS_PER_MINUTE: 60
    MAX_REQUESTS_PER_HOUR: 1000
    SESSION_MAX_AGE_HOURS: 24
    RATE_LIMIT_BURST: 10
  
  # Security configuration
  security:
    sessionSecret: ""
    apiKeyHashSalt: ""
  
  # Health checks
  livenessProbe:
    httpGet:
      path: /health
      port: 3001
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  readinessProbe:
    httpGet:
      path: /health
      port: 3001
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

# Frontend/Website Configuration
frontend:
  enabled: true
  replicaCount: 2
  
  image:
    repository: websitechatbot/chatkit-frontend
    tag: "latest"
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 80
    targetPort: 80
  
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  
  # Custom website configuration
  customWebsite:
    enabled: false
    image:
      repository: ""
      tag: ""
      pullPolicy: IfNotPresent
    # Custom website will be used instead of default frontend
    # This allows you to deploy your own website with ChatKit integrated
  
  # ChatKit widget configuration
  widget:
    apiUrl: ""  # Will be set automatically if not specified
    theme: "light"
    position: "bottom-right"
    autoOpen: false
    enableTyping: true
    enableSound: false
    maxMessages: 50

# Ollama Configuration
ollama:
  enabled: true
  replicaCount: 1
  
  image:
    repository: ollama/ollama
    tag: "latest"
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 11434
    targetPort: 11434
  
  resources:
    limits:
      cpu: 4000m
      memory: 8Gi
    requests:
      cpu: 2000m
      memory: 4Gi
  
  # Ollama configuration
  model: "llama2:latest"
  # Alternative models: mistral, codellama, llama2:13b, llama2:70b
  
  # Persistent storage for models
  persistence:
    enabled: true
    size: 50Gi
    storageClass: ""
    accessMode: ReadWriteOnce

# OpenAI Configuration
openai:
  enabled: true
  apiKey: ""
  # Fallback when Ollama is unavailable
  model: "gpt-3.5-turbo"
  maxTokens: 500
  temperature: 0.7

# Deployment Type Configuration
deploymentType:
  # Choose deployment type: "ollama", "openai", "hybrid"
  type: "hybrid"  # hybrid = Ollama primary, OpenAI fallback
  
  # Hybrid configuration
  hybrid:
    primaryProvider: "ollama"
    fallbackProvider: "openai"
    fallbackThreshold: 10  # seconds timeout before fallback

# Ingress Configuration
ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: chatkit.yourdomain.com
      paths:
        - path: /
          pathType: Prefix
          service: frontend
        - path: /api
          pathType: Prefix
          service: backend
  tls: []
  #  - secretName: chatkit-tls
  #    hosts:
  #      - chatkit.yourdomain.com

# Database Configuration (Optional)
postgresql:
  enabled: false
  auth:
    postgresPassword: ""
    username: "chatkit"
    password: ""
    database: "chatkit"
  primary:
    persistence:
      enabled: true
      size: 20Gi

# Redis Configuration (Optional)
redis:
  enabled: false
  auth:
    enabled: false
  master:
    persistence:
      enabled: true
      size: 8Gi

# Monitoring Configuration
monitoring:
  enabled: false
  serviceMonitor:
    enabled: false
    interval: 30s
    scrapeTimeout: 10s

# Logging Configuration
logging:
  level: "info"
  format: "json"
  
# Security Configuration
security:
  # Pod Security Context
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 1001
    fsGroup: 1001
  
  # Container Security Context
  containerSecurityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 1001
    capabilities:
      drop:
        - ALL
  
  # Network Policies
  networkPolicy:
    enabled: false
  
  # Pod Disruption Budget
  podDisruptionBudget:
    enabled: true
    minAvailable: 1

# Node Selection
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Additional labels
labels: {}

# Additional annotations
annotations: {}
